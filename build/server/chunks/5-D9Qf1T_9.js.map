{"version":3,"file":"5-D9Qf1T_9.js","sources":["../../../.svelte-kit/adapter-node/entries/pages/product/new-product/_page.server.ts.js","../../../.svelte-kit/adapter-node/nodes/5.js"],"sourcesContent":["import { e as error, f as fail } from \"../../../../chunks/index2.js\";\nconst API_BASE_URL = \"http://host.docker.internal:8000\";\nfunction validateProductTypes(input) {\n  const trimmed = input.trim();\n  if (!trimmed) {\n    return {\n      isValid: false,\n      value: \"\",\n      error: \"Product types cannot be empty\"\n    };\n  }\n  const validCharacterRegex = /^[a-zA-Z0-9, ]+$/;\n  if (!validCharacterRegex.test(trimmed)) {\n    return {\n      isValid: false,\n      value: trimmed,\n      error: \"Product types can only contain letters, numbers, spaces, and commas\"\n    };\n  }\n  const invalidCommaPatterns = [\n    /^,/,\n    // Comma at start\n    /,$/,\n    // Comma at end\n    /,,/,\n    // Consecutive commas\n    /, ,/\n    // Empty item (just spaces between commas)\n  ];\n  for (const pattern of invalidCommaPatterns) {\n    if (pattern.test(trimmed)) {\n      return {\n        isValid: false,\n        value: trimmed,\n        error: \"Invalid comma formatting. Ensure no empty items or consecutive commas\"\n      };\n    }\n  }\n  return {\n    isValid: true,\n    value: trimmed\n  };\n}\nconst simulateProcessing = async (ms = 3e3) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\nconst load = async () => {\n  try {\n    const runningEngineResponse = await fetch(`${API_BASE_URL}/engine/runningengines`);\n    const runningEngineList = await runningEngineResponse.json();\n    for (const delete_pid of runningEngineList.list_id) {\n      const deleteEngineResponse = await fetch(`${API_BASE_URL}/engine/${delete_pid}/kill`, { method: \"DELETE\" });\n      if (!deleteEngineResponse.ok) {\n        throw error(deleteEngineResponse.status, `there has been a problem trying to delete in memory engine id:${delete_pid}`);\n      }\n    }\n    return { \"status\": \"ok\" };\n  } catch (err) {\n    throw error(500, `Error fetching products: ${err}`);\n  }\n};\nconst actions = {\n  default: async ({ request }) => {\n    try {\n      await simulateProcessing(Math.random() * 5e3 + 2e3);\n      const formData = await request.formData();\n      const productType = formData.get(\"productType\")?.toString() || \"\";\n      const description = formData.get(\"description\")?.toString() || \"\";\n      if (!productType || !description) {\n        return fail(400, {\n          error: \"All fields are required\"\n        });\n      }\n      const productTypeValidation = validateProductTypes(productType);\n      if (!productTypeValidation.isValid) {\n        return fail(400, {\n          error: productTypeValidation.error\n        });\n      }\n      const product = {\n        ptype: productTypeValidation.value,\n        description\n      };\n      const url = `${API_BASE_URL}/product`;\n      const postProductResponse = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Accept\": \"application/json\",\n          // Tells the server you expect JSON response\n          \"Content-Type\": \"application/json\"\n          // Specifies that you're sending JSON data\n        },\n        body: JSON.stringify(product)\n      });\n      if (!postProductResponse.ok) {\n        throw error(postProductResponse.status, `Failed to push new product`);\n      }\n      const data = await postProductResponse.json();\n      return {\n        success: true,\n        message: \"Product registered successfully\",\n        ...data\n      };\n    } catch (error2) {\n      console.error(\"Error registering product:\", error2);\n      return fail(500, {\n        error: \"Failed to register product\"\n      });\n    }\n  }\n};\nexport {\n  actions,\n  load\n};\n","import * as server from '../entries/pages/product/new-product/_page.server.ts.js';\n\nexport const index = 5;\nlet component_cache;\nexport const component = async () => component_cache ??= (await import('../entries/pages/product/new-product/_page.svelte.js')).default;\nexport { server };\nexport const server_id = \"src/routes/product/new-product/+page.server.ts\";\nexport const imports = [\"_app/immutable/nodes/5.ZV25ASIr.js\",\"_app/immutable/chunks/DgMzrqux.js\",\"_app/immutable/chunks/DsZSh94P.js\",\"_app/immutable/chunks/Dfo8cZ4o.js\",\"_app/immutable/chunks/COIN8evz.js\",\"_app/immutable/chunks/DkCP2Fnt.js\",\"_app/immutable/chunks/BFO-mupc.js\",\"_app/immutable/chunks/DdUBiRTo.js\",\"_app/immutable/chunks/Dg7HLL5Q.js\",\"_app/immutable/chunks/CXYAfE7x.js\",\"_app/immutable/chunks/zU8o-TzL.js\",\"_app/immutable/chunks/c86IGuWO.js\"];\nexport const stylesheets = [\"_app/immutable/assets/5.dFRlV3lX.css\"];\nexport const fonts = [];\n"],"names":[],"mappings":"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"}